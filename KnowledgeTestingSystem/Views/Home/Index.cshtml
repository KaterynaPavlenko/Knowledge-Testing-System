@model KnowledgeTestingSystem.Models.IndexPageViewModel
@using KnowledgeTestingSystem.Helpers
@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <h1>Knowledge Testing</h1>
    <p class="lead">
        Online testing
    </p>
</div>

@using (Html.BeginForm("Index", "Home", FormMethod.Get, new { @class = "form-inline my-2 my-lg-0" }))
{
    <p>
        @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control mr-sm-2", placeholder = "Search" })
        <input class="btn btn-outline-success my-2 my-sm-0" type="submit" value="Search" />
    </p>
}
<div class="container pt-4">
    <div class="row text-center text-lg-left">
        @foreach (var item in Model.Tests)
        {
            using (Html.BeginForm("Index", "Home",
                new
                {
                    ViewBag.ReturnUrl
                },
                FormMethod.Post,
                new
                {
                    @class = "form-row col-md-4"
                }))
            {
                <div class="card mb-4 shadow">
                    <img class="card-img-top " src="@Url.Content(item.CoverImage)" alt="@item.Name" style="display: block; height: 250px; width: 100%;">
                    <div class="card-body">
                        <h4 class="card-title">
                            Name:
                            @Html.DisplayFor(modelItem => item.Name)
                        </h4>

                        <p class="card-text">
                            Theme of test:
                            @Html.DisplayFor(modelItem => item.ThemeOfTest)
                        </p>
                        <p class="card-text">
                            Time:
                            @Html.DisplayFor(modelItem => item.TimeMinutes)
                        </p>
                        <div class="btn-group">
                            @Html.ActionLink("Start", "InformAboutTest", "Test", new { item.Id }, new { @class = "btn btn-outline-success my-2 my-sm-0" })
                            @*<input type="hidden" value=@item.Id name="id">
                                <input class="btn btn-light" type="submit" value="Take" />*@
                        </div>
                    </div>
                </div>
            }
        }
        <br />
        @*Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount*@

        @*@Html.PagedListPager(Model, page => Url.Action("Index",
            new { page, currentFilter = ViewBag.CurrentFilter, @class = "page-item" }))*@
    </div>
    <div class="btn-group">
        @Html.PageLinks(Model.PageViewModel, x => Url.Action("Index", new { page = x, currentFilter = ViewBag.CurrentFilter, @class = "page-item" }))
    </div>
</div>


